# import streamlit as st
# import pandas as pd
# import plotly.express as px
#
# st.set_page_config(page_title="KPI –î–∞—à–±–æ—Ä–¥", layout="wide")
#
# st.title("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –ø–æ –ø—Ä–∏—Ä–æ—Å—Ç—É –≤–∞–ª–æ–≤–æ–π –ø—Ä–∏–±—ã–ª–∏")
# st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–∏—Ä–æ—Å—Ç –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º.")
#
# # –ó–∞–≥—Ä—É–∑–∫–∞ Excel
# uploaded_file = st.file_uploader("üìé –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])
#
# if uploaded_file:
#     df = pd.read_excel(uploaded_file)
#
#     if "–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫" not in df.columns:
#         st.error("–§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É '–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫'")
#     else:
#         segments = df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"].unique()
#         months = list(df.columns[1:])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –º–µ—Å—è—Ü—ã –∏–¥—É—Ç —Å 2-–π –∫–æ–ª–æ–Ω–∫–∏
#
#         st.sidebar.header("üìå –§–∏–ª—å—Ç—Ä—ã")
#         selected_segments = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–≥–º–µ–Ω—Ç—ã", segments, default=segments[:3])
#
#         filtered_df = df[df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"].isin(selected_segments)]
#
#         # –ü–µ—Ä–µ–≤–æ–¥ –≤ –¥–ª–∏–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è plotly
#         melted_df = filtered_df.melt(id_vars="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫", var_name="–ú–µ—Å—è—Ü", value_name="–ü—Ä–∏—Ä–æ—Å—Ç")
#
#         col1, col2 = st.columns(2)
#
#         with col1:
#             st.subheader("üìà –õ–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–∏—Ä–æ—Å—Ç–∞")
#             fig = px.line(melted_df, x="–ú–µ—Å—è—Ü", y="–ü—Ä–∏—Ä–æ—Å—Ç", color="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫",
#                           markers=True, labels={"–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫": "–°–µ–≥–º–µ–Ω—Ç"})
#             fig.update_layout(legend_title_text="–°–µ–≥–º–µ–Ω—Ç", height=400)
#             st.plotly_chart(fig, use_container_width=True)
#
#         with col2:
#             st.subheader("üìä –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ (—Å—É–º–º–∞—Ä–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç)")
#             sum_df = melted_df.groupby("–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫")["–ü—Ä–∏—Ä–æ—Å—Ç"].sum().reset_index()
#             fig2 = px.bar(sum_df, x="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫", y="–ü—Ä–∏—Ä–æ—Å—Ç", color="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫",
#                           labels={"–ü—Ä–∏—Ä–æ—Å—Ç": "–°—É–º–º–∞—Ä–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç (%)"}, height=400)
#             st.plotly_chart(fig2, use_container_width=True)
#
#         st.markdown("---")
#         st.subheader("üìã –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö")
#         st.dataframe(filtered_df, use_container_width=True)
#
# else:
#     st.info("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∞—à–±–æ—Ä–¥.")


import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="üìä KPI –î–∞—à–±–æ—Ä–¥", layout="wide")
st.title("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ —Ä–æ–∑–Ω–∏—á–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–≤–Ω—É—Ç—Ä–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è) ===
abc_df = pd.read_excel("retail_dash/abc_analysis_dynamic.xlsx")
season_df = pd.read_excel("retail_dash/seasonality_index.xlsx")
internet_df = pd.read_excel("retail_dash/internet_dynamic.xlsx")
growth_df = pd.read_excel("retail_dash/growth_table.xlsx")
asp_df = pd.read_excel("retail_dash/avg_price.xlsx")


# === –°–µ–∫—Ü–∏—è 1: ABC-–∞–Ω–∞–ª–∏–∑ ===
st.subheader("üìò ABC-–∞–Ω–∞–ª–∏–∑ –ø–æ –º–µ—Å—è—Ü–∞–º")
st.dataframe(abc_df, use_container_width=True)

# === –°–µ–∫—Ü–∏—è 2: –ò–Ω–¥–µ–∫—Å —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ ===
st.subheader("üå§ –ò–Ω–¥–µ–∫—Å —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏")
col_name = season_df.columns[0]
selected_cat = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", season_df[col_name].unique())
season_value = season_df[season_df[col_name] == selected_cat].iloc[0, 1]
st.metric(label=f"–°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –¥–ª—è: {selected_cat}", value=f"{season_value:.2%}")

# === –°–µ–∫—Ü–∏—è 3: –î–∏–Ω–∞–º–∏–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ–¥–∞–∂ ===
st.subheader("üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–¥–∏–Ω–∞–º–∏–∫–∞")
melted_internet = internet_df.melt(id_vars=internet_df.columns[0], var_name="–ú–µ—Å—è—Ü", value_name="–ó–Ω–∞—á–µ–Ω–∏–µ")
fig_internet = px.line(melted_internet, x="–ú–µ—Å—è—Ü", y="–ó–Ω–∞—á–µ–Ω–∏–µ", color=internet_df.columns[0])
st.plotly_chart(fig_internet, use_container_width=True)

# === –°–µ–∫—Ü–∏—è 4: –ü—Ä–∏—Ä–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏ ===
st.subheader("üìà –ü—Ä–∏—Ä–æ—Å—Ç –≤–∞–ª–æ–≤–æ–π –ø—Ä–∏–±—ã–ª–∏")
segment = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–≥–º–µ–Ω—Ç –ø—Ä–∏—Ä–æ—Å—Ç–∞", growth_df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"].unique())
row = growth_df[growth_df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"] == segment].drop(columns="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫").T
row.columns = ["–ü—Ä–∏—Ä–æ—Å—Ç (%)"]
row = row.reset_index().rename(columns={"index": "–ú–µ—Å—è—Ü"})
fig_growth = px.line(row, x="–ú–µ—Å—è—Ü", y="–ü—Ä–∏—Ä–æ—Å—Ç (%)", title=f"–ü—Ä–∏—Ä–æ—Å—Ç: {segment}")
st.plotly_chart(fig_growth, use_container_width=True)

# === –°–µ–∫—Ü–∏—è 5: –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ ===
st.subheader("üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ (ASP)")
segment_asp = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–≥–º–µ–Ω—Ç ASP", asp_df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"].unique())
row_asp = asp_df[asp_df["–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"] == segment_asp].drop(columns="–ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫").T
row_asp.columns = ["ASP"]
row_asp = row_asp.reset_index().rename(columns={"index": "–ú–µ—Å—è—Ü"})
fig_asp = px.line(row_asp, x="–ú–µ—Å—è—Ü", y="ASP", title=f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {segment_asp}")
st.plotly_chart(fig_asp, use_container_width=True)
